[build-system]
requires = ["scikit-build-core>=0.10", "pybind11"]
build-backend = "scikit_build_core.build"

[project]
name = "trajgenpy"
version = "0.1.5"
description = "TrajGenPy is a Python library that provides functionality for trajectory task generation using the Boustrophedon Cell Decomposition algorithm for coverage generation."
readme = "README.md"
authors = [
    { name = "Kasper A. R. Grontved", email = "kaspergrontved@gmail.com" },
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.scikit-build]
cmake.build-type = "Release"
wheel.expand-macos-universal-tags = true
minimum-version = "build-system.requires"

[project.optional-dependencies]
test = ["pytest"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
testpaths = ["tests"]
# pythonpath = [".", "src"]

[tool.ruff]
select = [
    "E",
    "F",
    "W",   # flake8
    "B",   # flake8-bugbear
    "I",   # isort
    "ARG", # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet
]
extend-ignore = [
    "PLR",  # Design related pylint codes
    "E501", # Line too long
]
target-version = "py310"
src = ["src"]
unfixable = [
    "T20",  # Removes print statements
    "F841", # Removes unused variables
]
flake8-unused-arguments.ignore-variadic-names = true
# isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/**" = ["T20"]
